{"version":3,"sources":["components/DataBody/DataBody.js","components/DataTable/DataTable.js","components/SearchBox/SearchBox.js","components/Nav/Nav.js","utils/API.js","components/DataArea/DataArea.js","components/Main/Main.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["DataBody","users","formatDate","date","dateArray","split","year","join","undefined","name","map","login","picture","phone","email","dob","data-th","className","src","medium","alt","first","last","href","target","uuid","DataTable","headings","handleSort","id","width","style","onClick","toLowerCase","SearchBox","handleSearchChange","type","placeholder","aria-label","onChange","event","Nav","allUsers","getUsers","axios","get","DataArea","state","order","filteredUsers","heading","setState","sortedUsers","sort","a","b","localeCompare","console","log","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","Component","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07905d36.chunk.js","sourcesContent":["import React from 'react';\n\nimport './DataBody.css';\n\nconst DataBody = ({ users }) => {\n    const formatDate = (date) =>{\n     let dateArray = date.split(\"-\");\n     let year = dateArray[0];\n     let month = dateArray[1];\n     let dayArray = dateArray[2].split(\"T\");\n     let day = dayArray[0];\n     let formattedDate = [month, day, year].join(\"/\");\n    return formattedDate;\n    }\n  return (\n      <tbody>\n       {users[0] !== undefined && users[0].name !== undefined ? (\n        users.map(({ login, name, picture, phone, email, dob }) => {\n          return (\n            <tr key={login.uuid}>\n              <td data-th=\"Image\" className=\"align-middle\">\n                <img\n                  src={picture.medium}\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\n                  className=\"rounded\"\n                />\n              </td>\n              <td data-th=\"Name\" className=\"name-cell align-middle\">\n                {name.first} {name.last}\n              </td>\n              <td data-th=\"Phone\" className=\"align-middle\">\n                {phone}\n              </td>\n              <td data-th=\"Email\" className=\"align-middle\">\n                <a href={\"mailto:\" + email} target=\"__blank\">\n                  {email}\n                </a>\n              </td>\n              <td data-th=\"DOB\" className=\"align-middle\">\n                {formatDate(dob.date)}\n              </td>\n            </tr>\n          );\n        })\n      ) : (\n        <></>\n      )}\n      </tbody>\n  )\n}\n\nexport default DataBody;","import React from 'react';\nimport DataBody from '../DataBody/DataBody';\n\nimport './DataTable.css';\n\nfunction DataTable({ headings, users, handleSort }) {\n    return (\n      <div className=\"datatable mt-5\">\n        <table\n          id=\"table\"\n          className=\"table table-striped table-hover table-condensed\"\n        >\n          <thead>\n            <tr>\n              {headings.map(({ name, width }) => {\n                return (\n                  <th\n                    className=\"col\"\n                    key={name}\n                    style={{ width }}\n                    onClick={() => {\n                      handleSort(name.toLowerCase());\n                    }}>\n                    {name}\n                    <span className=\"pointer\"></span>\n                  </th>\n                );\n              })}\n            </tr>\n          </thead>\n  \n          <DataBody users={users} />\n        </table>\n      </div>\n    );\n  }\n\n  export default DataTable;","import React from \"react\";\n\nimport \"./Search.css\";\n\nconst SearchBox = ({ handleSearchChange }) => {\n  return (\n    <div className=\"searchbox\">\n      <form className=\"form-inline\">\n        <input\n          className=\"form-control\"\n          type=\"search\"\n          placeholder=\"🔍 Search\"\n          aria-label=\"Search\"\n          onChange={event => handleSearchChange(event)}\n        />\n      </form>\n    </div>\n  );\n}\nexport default SearchBox;","import React from \"react\";\nimport SearchBox from \"../SearchBox/SearchBox\";\n\nimport \"./Nav.css\";\n\nfunction Nav({ handleSearchChange }) {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\n        <SearchBox handleSearchChange={handleSearchChange} />\n      </div>\n    </nav>\n  );\n}\nexport default Nav;","import axios from \"axios\";\n\n// Gets all users\n const allUsers = {\ngetUsers: () => {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n}\n\nexport default allUsers;","import React, { Component } from 'react';\nimport DataTable from \"../DataTable/DataTable\";\nimport Nav from '../Nav/Nav';\nimport API from '../../utils/API';\n\n\nimport './DataArea.css';\n\nclass DataArea extends Component {\n    state = {\n        users: [{}],\n        order: 'descend',\n        filteredUsers: [{}]\n    }\n\n    headings = [\n     { name: 'Image', width: '20%' },\n     { name: 'Name', width: '15%' },\n     { name: 'Phone', width: '15%' },\n     { name: 'Email', width: '30%' },\n     { name: 'DOB', width: '20%' }\n    ]\n\n    handleSort = heading => {\n        if (this.state.order === 'descend'){\n            this.setState({ \n                order: 'ascend'\n            })\n        } else {\n            this.setState({\n                order: 'descend'\n            })\n        }\n\n        const compareFnc = (a, b) => {\n            if (this.state.order === 'ascend') {\n                 // if missing values\n                if (a[heading] === undefined) {\n                    return 1;\n                } else if (b[heading] === undefined){\n                    return -1;\n                } // numerically\n                 else if (heading === \"name\") {\n                     return a[heading]\n                     .first\n                     .localeCompare(b[heading]\n                     .first);\n                } else {\n                     return a[heading] - b[heading];\n                }\n            }\n            else {\n                // if missing values\n                if (a[heading] === undefined) {\n                    return 1;\n                  } else if (b[heading] === undefined) {\n                    return -1;\n                  }\n                  // numerically\n                  else if (heading === \"name\") {\n                    return b[heading]\n                    .first\n                    .localeCompare(a[heading]\n                    .first);\n                  } else {\n                    return b[heading] - a[heading];\n                  }\n            }\n        }\n        const sortedUsers = this.state.filteredUsers.sort(compareFnc);\n         this.setState({ filteredUsers: sortedUsers });\n    }\n    handleSearchChange = event => {\n        console.log(event.target.value);\n        const filter = event.target.value;\n        const filteredList = this.state.users.filter(item => {\n          // merge data together, then see if user input is anywhere inside\n          let values = Object.values(item)\n            .join(\"\")\n            .toLowerCase();\n          return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n        this.setState({ filteredUsers: filteredList });\n      }\n    \n      componentDidMount() {\n        API.getUsers().then(results => {\n          this.setState({\n            users: results.data.results,\n            filteredUsers: results.data.results\n          });\n        });\n      }\n    \n      render() {\n        return (\n          <>\n            <Nav handleSearchChange={this.handleSearchChange} />\n            <div className=\"data-area\">\n              <DataTable\n                headings={this.headings}\n                users={this.state.filteredUsers}\n                handleSort={this.handleSort}\n              />\n            </div>\n          </>\n        );\n      }\n\n};\n\n\nexport default DataArea;","import React, { Component } from \"react\";\nimport DataArea from \"../DataArea/DataArea\";\n\nimport \"./Main.css\";\n\nexport default class Main extends Component {\n  render() {\n    return (\n      <>\n        <DataArea />\n      </>\n    );\n  }\n}","import React from 'react';\n\nimport \"./Wrapper.css\";\n\nfunction Wrapper({ children }) {\n  return (\n      <div className=\"wrapper\">\n        { children }\n      </div>\n  );\n}\n\nexport default Wrapper;","import React, { Component } from 'react';\nimport \"./Header.css\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <h1>Employee Directory</h1>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Main from './components/Main/Main';\nimport Wrapper from './components/Wrapper/Wrapper';\nimport Header from './components/Header/Header';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Wrapper>\n       <Header />\n       <Main />\n     </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}